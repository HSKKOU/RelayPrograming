<div id="app-body" class="wh100 exist_ui">

  <div id="code_chat_view" class="wh100">
    <!-- area for coded text -->
    <?= $this->code_view ?>

    <!-- area for chat text -->
    <?= $this->chat_view ?>

    <!-- area for members -->
    <?= $this->members_view ?>
  </div>

  <!-- area for user input -->
  <?= $this->user_input ?>
</div>

<input id="room_id" type="hidden" value="<?= $this->room_id ?>" />




<?php
$api_user = $this->url('api/default', array('controller' => 'user'));
$api_code = $this->url('api/default', array('controller' => 'code'));
$api_chat = $this->url('api/default', array('controller' => 'chat'));
$api_room = $this->url('api/default', array('controller' => 'room'));
$api_member = $this->url('api/default', array('controller' => 'member'));
$api_roomst = $this->url('api/default', array('controller' => 'roomst'));

$this->inlineScript()->appendScript(
<<<__END__

/* declare members */
var \$signUpDOM = \$("#sign_up"),
    \$signUpForm = \$("#sign_up_form"),
    \$codeViewDOM = \$("#code_view"),
    \$codeRowTmp = \$codeViewDOM.find(".code_row").remove().removeClass("template"),
    \$codeViewField = \$("#code_view_field"),
    \$chatViewDOM = \$("#chat_view"),
    \$chatRowTmp = \$chatViewDOM.find(".chat_row").remove().removeClass("template"),
    \$chatViewField = \$("#chat_view_field"),
    \$membersView = \$("#members_view_field"),
    \$memberRowTmp = \$membersView.find(".member_row").remove().removeClass("template"),
    \$userInputForm = \$("#user_input_form"),
    \$userInput = \$("#user_input_field > input"),
    \$userIco = \$("#user_ico"),
    initWaiter, codeRowCreator;
/* end declare members */


/* init */
(function main(){
  initialize();
  setMainEvents();
})();

function initialize(){
  initApis();
  roomId = \$("#room_id").val();
  roomVerCN = cookieNameRoomVer(roomId);
}

function initApis(){
  api_user = "$api_user";
  api_code = "$api_code";
  api_chat = "$api_chat";
  api_room = "$api_room";
  api_member = "$api_member";
  api_roomst = "$api_roomst";
}
/* end init */


/* main routine */
function setMainEvents(){
  resetUserInput();
  setUserInfo2UI();

  codeRowCreator = new createCodeRowCreator(\$codeRowTmp);

  initWaiter = new Waiter(function(){
    recievedCodes = setRecievedCodes;
    recievedChatTexts = setRecievedChatTexts;
    recievedMembers = setMemberStatus;
    startHeartBeat();
  }, 4);

  setUserInputEvent();

  getTextsInRoom(api_code, roomId, function(_data){ setRecievedCodes(_data); initWaiter.resolve(); });
  getTextsInRoom(api_chat, roomId, function(_data){ setRecievedChatTexts(_data); initWaiter.resolve(); });
  getMemberStatus(function(_data){ setMemberStatus(_data); initWaiter.resolve(); });
  postGetRoomStatus(api_roomst, function(_data){ storeRoomVersion(_data['room_ver']); initWaiter.resolve(); });
}
/* end main routine */


/* code */
function setRecievedCodes(_codes){
  if(_codes.length == 0){ return; }
  for(var i in _codes){
    if(\$codeViewField.find(".code-line-num-"+_codes[i]['line_num'])[0]){ updateCode(_codes[i]); }
    else{ addRecievedCode(_codes[i]); }
  }
  \$codeViewField.animate({"scrollTop": \$(\$codeViewField)[0].scrollHeight}, 'fast');
}
function updateCode(_code){
  \$codeViewField.find(".code-line-num-"+_code['line_num']).find(".code").html(createPrettyCodeHtml(_code['code']));
  prettyPrint();
}
function addRecievedCode(_code){
  codeRowCreator.createCR(_code).attr("data-cid", _code['id']).appendTo(\$codeViewField);
  prettyPrint();
}
function succeedPostCode(_code){ resetUserInput(); }
/* end code */


/* chat */
function setRecievedChatTexts(_ctexts){
  if(_ctexts.length == 0) { return ;}
  for(var i in _ctexts){ addRecievedChatText(_ctexts[i]); }
  \$chatViewField.animate({"scrollTop": \$(\$chatViewField)[0].scrollHeight}, 'fast');
}
function addRecievedChatText(_ctext){ createChatRow(_ctext, \$chatRowTmp.clone()).appendTo(\$chatViewField); }
function succeedPostChatText(_ctext){ resetUserInput(); }
/* end chat */


/* member */
function getMemberStatus(_callback){
  post({"url": api_member+"?room_id="+roomId, "type": "get", "query": {},
    "success": function(_data){ _callback(_data['data']) },
    "fail": function(_data){ /* nothing to do. */ },
    "complete": function(_data){ /* nothing to do. */ }
  });
}

function setMemberStatus(_members){
  \$(".member_row").remove();
  for(var i in _members['members']){
    createMember(_members['members'][i], _members['turn_user_id'], \$memberRowTmp).appendTo(\$membersView);
  }
  updateMemberTurn(_members['turn_user_id']);
  if(userId == _members['turn_user_id']){ /* nothing to do. */ }
}

function updateMemberTurn(_turnUid){
  \$membersView.find(".member_row.turn").removeClass("turn");
  \$membersView.find(".member_row.uid"+_turnUid).addClass("turn");
  if(userId == _turnUid){ /* nothing to do. */ }
}
/* end member */


/* user input */
function setUserInputEvent(){
  \$userInputForm.on("submit", function(_e){
    _e.preventDefault();
    var inputText = \$userInputForm.find('#user_input_field > input').val(),
        postData = { "room_id": roomId };
    if(!inputText.match(/^[0-9]+:/)){ log("illegal syntax modified code."); return false; }

    var ipTexts = inputText.split(":"),
        lineNum = ipTexts[0],
        code = "";
    ipTexts.shift();
    code = ipTexts.join(":");

    var editRowCid = \$codeViewField.find(".code-line-num-"+lineNum).data("cid");
    postData["code"] = encodeSpecialChara(code);

    post({"url": api_code+editRowCid, "type": "put", "query": postData,
      "success": function(_data){ resetUserInput(); },
      "fail": function(_data){ log("f", _data);/* nothing to do. */ },
      "complete": function(_data){ /* nothing to do. */ }
    });

    return false;
  });
}

function resetUserInput(){ \$userInput.val(""); }
function setUserInfo2UI(){ \$userIco.css({"background": "#333", "color": "#fff"}).text("ADMIN"); }
/* end user input */

__END__
);
