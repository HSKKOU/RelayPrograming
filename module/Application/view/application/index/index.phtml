<div id="app-body" class="wh100 exist_ui">

  <div id="code_chat_view" class="wh100">
    <!-- area for coded text -->
    <?= $this->code_view ?>

    <!-- area for chat text -->
    <?= $this->chat_view ?>

    <!-- area for members -->
    <?= $this->members_view ?>
  </div>

  <!-- area for user input -->
  <?= $this->user_input ?>
</div>

<!-- Login lightbox -->
<?= $this->loginlb ?>

<input id="room_id" type="hidden" value="<?= $this->room_id ?>" />




<?php
$api_user = $this->url('api/default', array('controller' => 'user'));
$api_code = $this->url('api/default', array('controller' => 'code'));
$api_chat = $this->url('api/default', array('controller' => 'chat'));
$api_room = $this->url('api/default', array('controller' => 'room'));
$api_member = $this->url('api/default', array('controller' => 'member'));
$api_roomst = $this->url('api/default', array('controller' => 'roomst'));

$this->inlineScript()->appendScript(
<<<__END__

/* declare members */
var \$signUpDOM = \$("#sign_up"),
    \$signUpForm = \$("#sign_up_form"),
    \$codeViewDOM = \$("#code_view"),
    \$chatViewDOM = \$("#chat_view"),
    userId = -1,
    roomId = \$("#room_id").val(),
    userIdCN = cookieNameUserId(roomId),
    userName = "",
    userColor = "#ffffff";
/* end declare members */


/* init */
(function init(){
  if($.cookie(userIdCN) > 0){
    userId = $.cookie(userIdCN);
    signIn();
    return;
  }
  setLoginEvent();
})();
/* end init */


/* login */
function setLoginEvent(){
  \$signUpForm.on("submit", function(_e){
    _e.preventDefault();
    signUp();
    return false;
  });
}

function signUp(){
  var name = \$signUpForm.find('.input_name > input').val(),
      color = \$signUpForm.find('.input_color > input').val();

  var postData = { "type": "signUp", "name": name, "color": color, "room_id": roomId };
  post({"url": "$api_user", "type": "post", "query": postData,
    "success": function(_data){ succeedSignUp(_data['data']); },
    "fail": function(_data){ failedSignUp(); },
    "complete": function(_data){ /* nothing to do. */ }
  });
}

function succeedSignUp(_user){
  userId = +_user['id'];
  signIn();
}
function failedSignUp(){ alert("Failed to create or sign up."); }

function signIn(){
  var postData = { "type": "signIn", "user_id": userId, "room_id": roomId };
  post({"url": "$api_user", "type": "post", "query": postData,
    "success": function(_data){ succeedSignIn(_data['data']); },
    "fail": function(_data){ failedSignIn(_data); },
    "complete": function(_data){ /* nothing to do. */ }
  });
}

function succeedSignIn(_user){
  /* set User Info */
  userId = +_user['id'];
  userName = _user['name'];
  userColor = _user['color'];
  $.cookie(userIdCN, userId, { "expires": 1 });
  /* end set User Info */

  \$signUpForm.off();
  \$signUpDOM.remove();

  setMainEvents();
}
function failedSignIn(_data){ alert("Failed Sign In."); log(_data); }
/* end login */


/* main routine */
var \$codeRowTmp = \$codeViewDOM.find(".code_row").remove().removeClass("template"),
    \$chatRowTmp = \$chatViewDOM.find(".chat_row").remove().removeClass("template"),
    \$userInputForm = \$("#user_input_form"),
    \$userInput = \$("#user_input_field > input"),
    \$codeViewField = \$("#code_view_field"),
    \$chatViewField = \$("#chat_view_field"),
    initWaiter;
function setMainEvents(){
  resetUserInput();
  setUserInfo2UI();

  initWaiter = new Waiter(function(){ startHeartBeat(); }, 4);

  getTextsInRoom("$api_code", roomId, function(_data){ setRecievedCodes(_data); initWaiter.resolve(); });
  getTextsInRoom("$api_chat", roomId, function(_data){ setRecievedChatTexts(_data); initWaiter.resolve(); });
  getMemberStatus(function(_data){ setMemberStatus(_data); initWaiter.resolve(); });
  postGetRoomStatus(function(_data){ storeRoomVersion(_data['room_ver']); initWaiter.resolve(); });

  \$userInputForm.on("submit", function(_e){
    _e.preventDefault();
    var inputText = \$userInputForm.find('#user_input_field > input').val(),
        postData = { "user_id": userId, "room_id": roomId };
    if(isCodeOrChatText(inputText)){
      postData["code"] = encodeSpecialChara(inputText.substr(1));
      postTexts("$api_code", postData, succeedPostCode);
    } else {
      postData["text"] = encodeSpecialChara(inputText);
      postTexts("$api_chat", postData, succeedPostChatText);
    }
    return false;
  });
}

function resetUserInput(){ \$userInput.val(""); }
function setUserInfo2UI(){ \$("#user_ico").css({"background": userColor}).text(userName); }
/* end main routine */


/* code */
function setRecievedCodes(_codes){
  if(_codes.length == 0){ return; }
  for(var i in _codes){ addRecievedCode(_codes[i]); }
}
function addRecievedCode(_code){ createCodeRow(_code, \$codeRowTmp.clone()).appendTo(\$codeViewField); prettyPrint(); }
function succeedPostCode(_code){ resetUserInput(); }
/* end code */


/* chat */
function setRecievedChatTexts(_ctexts){
  if(_ctexts.length == 0) { return ;}
  for(var i in _ctexts){ addRecievedChatText(_ctexts[i]); }
}
function addRecievedChatText(_ctext){ createChatRow(_ctext, \$chatRowTmp.clone()).appendTo(\$chatViewField); }
function succeedPostChatText(_ctext){ resetUserInput(); }
/* end chat */


/* member */
var \$membersView = \$("#members_view_field"),
    \$memberRowTmp = \$membersView.find(".member_row").remove().removeClass("template");
function getMemberStatus(_callback){
  post({"url": "$api_member?room_id="+roomId, "type": "get", "query": {},
    "success": function(_data){ _callback(_data['data']) },
    "fail": function(_data){ /* nothing to do. */ },
    "complete": function(_data){ /* nothing to do. */ }
  });
}

function setMemberStatus(_members){
  log("members", _members);
  for(var i in _members['members']){ setMember(_members['members'][i], _members['turn_user_id']); }
}

function setMember(_member, _tui){
  var \$memberRow = \$memberRowTmp.clone();
  \$memberRow.css({"background": _member['color']}).text(_member['name']);
  if(_member['id'] == _tui){ \$memberRow.addClass("turn"); }
  \$memberRow.appendTo(\$membersView);
}
/* end member */


/* room */
var roomVerCN = cookieNameRoomVer(roomId);
function getRoomVersion(){
  var rVer = $.cookie(roomVerCN);
  if(rVer === void 0 || rVer === null){ rVer = "0000-00-00 00:00:00"; }
  return rVer;
}
function storeRoomVersion(_ver){ $.cookie(roomVerCN, _ver, { "expires": 1 }); }
/* end room */


/* heart beat */
var heartBeatSPB = 1.0,
    canPostGHB = true;
function startHeartBeat(){ heartBeat(); }

function postHeartBeat(){
  if(!canPostGHB){ return; }
  canPostGHB = false;
  postGetRoomStatus(succeedPostHeartBeat);
}

function postGetRoomStatus(_callback){
  var postData = { "type": "hb", 'room_id': roomId, "ver": getRoomVersion() };
  post({"url": "$api_roomst", "type": "post", "query": postData,
    // "success": function(_data){ setTimeout(function(){_callback(_data['data']);}, 1400); },
    "success": function(_data){ log("rss", _data); _callback(_data['data']); },
    "fail": function(_data){ log("rs fail", _data);/* nothing to do. */ },
    "complete": function(_data){ /* nothing to do. */ }
  });
}

function succeedPostHeartBeat(_data){
  if(_data['updated']){
    log("rs updated", _data);
    storeRoomVersion(_data['room_ver']);
    setRecievedCodes(_data['codes']);
    setRecievedChatTexts(_data['chat']);
  }
  canPostGHB = true;
}

function heartBeat(){
  log("heart beat");
  setTimeout(function(){
    postHeartBeat();
    heartBeat();
  }, heartBeatSPB * 1000);
}
/* end heart beat */

__END__
);
